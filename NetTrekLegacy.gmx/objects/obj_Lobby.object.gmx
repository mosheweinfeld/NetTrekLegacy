<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu = false;

playerList = ds_list_create();
deviceList = ds_list_create();

partyLeader = true;

localPlayers = 0;
remoteClients = ds_list_create();
/*remoteClients
ds_list_add(remoteClients,ds_list_create());
Lists of lists containing remote players
Each list represents a remote connection with its own local players
*/

orbit = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rw = room_width/2;
rh = room_height/2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>starfield_init</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debug</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_add(remoteClients,ds_list_create());
ds_list_add(remoteClients,ds_list_create());
ds_list_add(remoteClients,ds_list_create());
int = instance_create(0,0,obj_LobbyPlayer);
int.name = "adfasdf";
int.orbit = 0;
ds_list_add(ds_list_find_value(remoteClients,0),int);
int = instance_create(0,0,obj_LobbyPlayer);
int.name = "adfasdf";
int.orbit = 120;
ds_list_add(ds_list_find_value(remoteClients,0),int);
int = instance_create(0,0,obj_LobbyPlayer);
int.name = "adfasdf";
int.orbit = 240;
ds_list_add(ds_list_find_value(remoteClients,0),int);
int = instance_create(0,0,obj_LobbyPlayer);
int.name = "adfasdf";
int.orbit = 0;
ds_list_add(ds_list_find_value(remoteClients,1),int);
int = instance_create(0,0,obj_LobbyPlayer);
int.name = "adfasdf";
int.orbit = 0;
ds_list_add(ds_list_find_value(remoteClients,2),int);
int = instance_create(0,0,obj_LobbyPlayer);
int.name = "adfasdf";
int.orbit = 180;
ds_list_add(ds_list_find_value(remoteClients,2),int);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(menu)exit;
var gp_num = gamepad_get_device_count();
for (var i = 0; i &lt; gp_num; i++){
    if(gamepad_is_connected(i)&amp;&amp;gamepad_button_check_pressed(i,gp_start)){
        if(ds_list_find_index(deviceList,"gamepad"+string(i))&lt;0){
            ds_list_add(deviceList,"gamepad"+string(i));
            menu = true;
            int = instance_create(0,0,obj_AccountPicker);
            int.control = i;
        }
    }
}

if(keyboard_check_pressed(vk_anykey)&amp;&amp;ds_list_find_index(deviceList,"keyboard")&lt;0){
    ds_list_add(deviceList,"keyboard");
    menu = true;
    instance_create(0,0,obj_AccountPicker);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(surf_starfield)
    {
      draw_set_blend_mode(bm_add);
      draw_surface_tiled(surf_starfield,orbit*10,orbit*10);
      draw_set_blend_mode(bm_normal);
    };
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(menu)exit;

orbit -= 0.1;

if(os_type == os_windows || os_type == os_macosx || os == os_linux){
    if(ds_list_find_index(deviceList,"keyboard")&lt;0){
        draw_sprite(spr_Devices,0,0,sprite_get_height(spr_Devices));
    }else{
        draw_sprite_ext(spr_Devices,0,0,sprite_get_height(spr_Devices),1,1,0,c_lime,1);
    }
}
var gp_num = gamepad_get_device_count();
for (var i = 0; i &lt; gp_num; i++){
    if(gamepad_is_connected(i)){
        if(ds_list_find_index(deviceList,"gamepad"+string(i))&lt;0){
            draw_sprite(spr_Devices,1,i*sprite_get_width(spr_Devices),0);
        }else{
            draw_sprite_ext(spr_Devices,1,i*sprite_get_width(spr_Devices),0,1,1,0,c_lime,1);
        }
    }
}

draw_sprite(spr_Planet,0,rw,rh);
for(var i=0;i&lt;ds_list_size(remoteClients);i++){
    var o = i*(360/ds_list_size(remoteClients))+orbit;
    var ix = rw+lengthdir_x(rw/2,o);
    var iy = rh+lengthdir_y(rh/2,o)
    var l = ds_list_find_value(remoteClients,i);
    draw_sprite(spr_Planet,0,ix,iy);
    for(var ii=0;ii&lt;ds_list_size(l);ii++){
        int = ds_list_find_value(l,ii);
        int.x = ix;
        int.y = iy;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
